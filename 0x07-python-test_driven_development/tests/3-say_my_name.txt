============================
doctest for 3-say_my_name.py
============================
``say_my_name()`` prints out in this format "My name is <first name> <last name>"

SUCCESSFUL TEST CONDITIONS
==========================

testing printing two strings
::
>>> say_my_name = __import__('3-say_my_name').say_my_name
>>> say_my_name("Iyanu", "Dayisi")
My name is Iyanu Dayisi

testing printing input first name string with default last name empty string
::
>>> say_my_name("Iyanu")
My name is Iyanu 

testing empty string arguments
::
>>> say_my_name("", "")
My name is  

testing None argument for first_name
::
>>> say_my_name(None, "Dayisi")
Traceback (most recent call last):
TypeError: first_name must be a string

testing None argument for last_name
::
>>> say_my_name("Iyanu", None)
Traceback (most recent call last):
TypeError: last_name must be a string

testing for incorrect type for first_name
::
>>> say_my_name(1, "Dayisi")
Traceback (most recent call last):
TypeError: first_name must be a string

testing for incorrect type for last_name
::
>>> say_my_name("Iyanu", 1)
Traceback (most recent call last):
TypeError: last_name must be a string

testing boolean argument for first_name
::
>>> say_my_name(True, "Last")
Traceback (most recent call last):
TypeError: first_name must be a string

testing if no arguments passed to function
::
>>> say_my_name()
Traceback (most recent call last):
TypeError: say_my_name() missing 1 required positional argument: 'first_name'
